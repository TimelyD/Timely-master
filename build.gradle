// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'

        //导入ffmpeg需要
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1"

        //greendao
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2' // add plugin
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://raw.githubusercontent.com/HyphenateInc/Hyphenate-SDK-Android/master/repository"
        }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com' }
    }
}

apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

apply from: "config.gradle"

//从该文件中获取签名信息
def getSignInfo(propFileName) {
    def com.android.build.gradle.internal.dsl.SigningConfig signingConfig = new com.android.build.gradle.internal.dsl.SigningConfig("signInfo")
    File propFile = file(propFileName);
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        signingConfig.storeFile = file(props['STORE_FILE'])
        signingConfig.storePassword = props['STORE_PASSWORD']
        signingConfig.keyAlias = props['KEY_ALIAS']
        signingConfig.keyPassword = props['KEY_PASSWORD']
        println('signConfig is exits')
    } else {
        println('sign config is null')
        signingConfig = null
    }
    return signingConfig;
}
//configurations {
//    all*.exclude group: 'com.android.support', module: 'support-v4'
//}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    lintOptions {
        disable "ResourceType"
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    defaultConfig {
        applicationId "com.tg.tgt"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        multiDexEnabled true

        /*ndk { //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi"//, "armeabi-v7a", "arm64-v8a", "x86","x86_64"
        }*/
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

//	signingConfigs {
//		release {
//			storeFile file(KEY_STORE_FILE)
//			storePassword STORE_PASSWORD
//			keyAlias KEY_ALIAS
//			keyPassword KEYP_ASSWORD
//		}
//	}
    buildTypes {

        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
        }

        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            zipAlignEnabled true
//            signingConfig signingConfigs.release
            signingConfig getSignInfo("local.properties")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'


            ndk { //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
                abiFilters "armeabi-v7a"//, "armeabi", "arm64-v8a", "x86","x86_64"
            }
        }
    }
}
greendao {
    schemaVersion 3
}
dependencies {
    compile project(':redpacketlibrary')
    compile project(':EaseUI')
    compile fileTree(include: '*.jar', exclude: 'android-support-multidex.jar', dir: 'libs')
    //考虑到在eclipse中,直接使用源码
    //    compile ('com.anthonycr.grant:permissions:1.0'){
    //        exclude module: 'support-v4'
    //    }
    //内存溢出
    compile project(':FFmpegAndroid')
    compile project(':recyclerViewLibrary')
    compile project(':lib-zxing')
    // add library
    compile project(':updaterLib')
    //    compile 'com.android.support:design:26.0.0-alpha1'
    compile project(':pickerview')
    compile project(':LibMarsdaemon')

//    compile 'fm.jiecao:jiecaovideoplayer:4.8.3'
//    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile project(path: ':ShortcutBadger')
    compile 'com.android.support:multidex:1.0.1'
    compile 'me.tangke.slidemenu:slidemenu:1.1.0'
    compile 'org.greenrobot:greendao:3.2.2'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.github.ksoichiro:android-observablescrollview:1.5.0'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-7'
    compile 'com.classic.common:multiple-status-view:1.4'
    compile 'com.tencent.bugly:crashreport:2.6.6'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
}
